(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     28287,        766]
NotebookOptionsPosition[     26147,        693]
NotebookOutlinePosition[     26503,        709]
CellTagsIndexPosition[     26460,        706]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Exercises", "Title",
 CellChangeTimes->{{3.664612302246826*^9, 3.664612304259843*^9}}],

Cell[CellGroupData[{

Cell["Simulations", "Section",
 CellChangeTimes->{{3.664612305924376*^9, 3.6646123099868183`*^9}, {
  3.664613806469784*^9, 3.66461380871784*^9}}],

Cell["\<\
In the lecture notes a coin toss was simulated and only the number of heads \
was recorded:\
\>", "Text",
 CellChangeTimes->{{3.664612672387686*^9, 3.6646126989254837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"headCount", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tailsCount", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"headCount", "<", "10"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomInteger", "[", "]"}], "\[Equal]", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"headCount", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"tailsCount", "++"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<|", 
  RowBox[{
   RowBox[{"\"\<Heads\>\"", "\[Rule]", "headCount"}], ",", 
   RowBox[{"\"\<Tails\>\"", "\[Rule]", "tailsCount"}], ",", 
   RowBox[{"\"\<Tosses\>\"", "\[Rule]", 
    RowBox[{"headCount", "+", "tailsCount"}]}]}], "|>"}]}], "Input",
 CellChangeTimes->{3.664613350236264*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Heads\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"Tails\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"Tosses\"\>", "\[Rule]", "17"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.664612707713238*^9, 3.6646127118870068`*^9}, 
   3.6646133510063972`*^9}]
}, Open  ]],

Cell["\<\
The code needs to be modified such that the simulation run values can be \
returned.\
\>", "Text",
 CellChangeTimes->{{3.664613377152317*^9, 3.664613400461363*^9}}],

Cell["\<\
Compare the difference between Append and AppendTo in this example\
\>", "ItemNumbered",
 CellChangeTimes->{{3.664613414997982*^9, 3.6646134319626017`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Append", "[", 
  RowBox[{"list", ",", "4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.664613433682433*^9, 3.664613445170411*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"list2", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AppendTo", "[", 
  RowBox[{"list2", ",", "8"}], "]"}]}], "Input",
 CellChangeTimes->{{3.664613446845804*^9, 3.664613457005237*^9}}],

Cell[TextData[{
 "Modify the While loop such that the simulation results are continuously \
appended to a variable, ",
 StyleBox["simulation",
  FontSlant->"Italic"]
}], "ItemNumbered",
 CellChangeTimes->{{3.664613495166864*^9, 3.66461351945444*^9}}],

Cell["\<\
Note that for large expressions and simulations with many iterations, it is \
inefficient to use Append or AppendTo. You\[CloseCurlyQuote]re advised to \
read the documentation for Reap and Sow where speed becomes a concern.\
\>", "Text",
 CellChangeTimes->{{3.664613846732028*^9, 3.664613886603487*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["propertyGrid", "Section",
 CellChangeTimes->{{3.664613894872628*^9, 3.664613896638527*^9}}],

Cell["\<\
It is tremendously useful to quickly extract properties from the objects \
outputted from analytical functions in the Wolfram Language, for instance:\
\>", "Text",
 CellChangeTimes->{{3.664613901081121*^9, 3.664613948962929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ttest", "=", 
   RowBox[{"TTest", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "10", ",", "10", ",", "11", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "5", ",", "4", ",", "5", ",", "2"}], "}"}]}], 
      "}"}], ",", "Automatic", ",", "\"\<HypothesisTestData\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"propertyGrid", "[", "ttest", "]"}]}], "Input",
 CellChangeTimes->{{3.6646141119437447`*^9, 3.6646141152220173`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"DegreesOfFreedom\"\>", "8"},
    {"\<\"HypothesisTestData\"\>", 
     InterpretationBox[
      RowBox[{
       TagBox["HypothesisTestData",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/e+A0+X///kPOKWlFiipF9nHntVvzsjnPXBh5urJ
d/ra7OevWjZr2nKuA9dXvbrE+2mW/bEpdfUf+DgOSO9PE2KzW21fq3SUP6SZ
9UDJlTMTbNp22Is3TmWvPcB0IOemcKr2piP2094cO3NRh+HApvSzuene5+w/
BLJ8vn741/6m2ebTQmOu2F8WjFgs7/F1f3/dbftVujfsm17nvtun9WG/5TNh
sVftN+3fntUTvGT7dP9pqdvnpRVv2N/+wP1t1dGr+yfMKT23ofOKfZ3qt6BP
9dP3T41Zqn953Xl7saVx+Y39V+wPOPwwkA49ar9KqejMxb4n9tN8I4U5mnbZ
26/ndT676b392hehYWzaa+xPh31nDQz8ai+vrTZn+ctZ9tp7lp5/nPXL/tDH
+i3BwR32x+odTr3+9N9+Xbo277XgIvtTU3hE/fqYHJoO2//bVxplf14i/25C
FKuDz5mS3QqG9vYuP5N+ZUpyOLQxtu05v0HB/vKZr57uK7kc1jsobFTqYbRv
OP/PML6A1+HsqYS3B2Lu2kHD30FF304u5+MOGP8AjA+Lj+ZG3bag3Lt2sPgw
OMk9z3IOIzw+vmouCojgVITHx+dsy92nftnA40NhCpPLtqQIeHxc15pcePJf
ATw+JjCvtur42gaPDymHCd9P886Gx8euhk5OdaHV8PjY1VmaPHHaTnh8eD7+
BvTUEXh8vDHbc+W70zl4fHhP28hf734FHh9sDQteNXy+Do8PAVfRF7+A8Q2L
jwsOursENG/A4+P9ecaZ55ZfgcfHjd/Wj8yEzsPjwzXr98GXiUfh8bFdZq73
rJid8Pgw6LDcuvnbKnh8rJjDrnXqySx4fFzu1b82tb3NHhYfsPwAiw8GKIDJ
o/FxygMANByrWA==
               "], {{{}, 
                 {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   PolygonBox[{{1, 53, 54, 25, 24, 23, 22, 21, 20, 19, 18, 17,
                     16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]]}, {}, 
                 {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   PolygonBox[{{26, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 
                    42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
                    28, 27}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
                 {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[1.], 
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                   16, 17, 18, 19, 20, 21, 22, 23, 24, 25}]}, 
                 {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[1.], 
                  LineBox[{26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}]}}}],
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0, 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
              PlotRange->{All, All},
              PlotRangeClipping->True,
              PlotRangePadding->{{0, 0}, {0, 0.1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Type: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["TTest",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"p-Value: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0.11507711358252193`",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ/e+A0+X///kPOKWlFiipF9nHntVvzsjnPXBh5urJ
d/ra7OevWjZr2nKuA9dXvbrE+2mW/bEpdfUf+DgOSO9PE2KzW21fq3SUP6SZ
9UDJlTMTbNp22Is3TmWvPcB0IOemcKr2piP2094cO3NRh+HApvSzuene5+w/
BLJ8vn741/6m2ebTQmOu2F8WjFgs7/F1f3/dbftVujfsm17nvtun9WG/5TNh
sVftN+3fntUTvGT7dP9pqdvnpRVv2N/+wP1t1dGr+yfMKT23ofOKfZ3qt6BP
9dP3T41Zqn953Xl7saVx+Y39V+wPOPwwkA49ar9KqejMxb4n9tN8I4U5mnbZ
26/ndT676b392hehYWzaa+xPh31nDQz8ai+vrTZn+ctZ9tp7lp5/nPXL/tDH
+i3BwR32x+odTr3+9N9+Xbo277XgIvtTU3hE/fqYHJoO2//bVxplf14i/25C
FKuDz5mS3QqG9vYuP5N+ZUpyOLQxtu05v0HB/vKZr57uK7kc1jsobFTqYbRv
OP/PML6A1+HsqYS3B2Lu2kHD30FF304u5+MOGP8AjA+Lj+ZG3bag3Lt2sPgw
OMk9z3IOIzw+vmouCojgVITHx+dsy92nftnA40NhCpPLtqQIeHxc15pcePJf
ATw+JjCvtur42gaPDymHCd9P886Gx8euhk5OdaHV8PjY1VmaPHHaTnh8eD7+
BvTUEXh8vDHbc+W70zl4fHhP28hf734FHh9sDQteNXy+Do8PAVfRF7+A8Q2L
jwsOursENG/A4+P9ecaZ55ZfgcfHjd/Wj8yEzsPjwzXr98GXiUfh8bFdZq73
rJid8Pgw6LDcuvnbKnh8rJjDrnXqySx4fFzu1b82tb3NHhYfsPwAiw8GKIDJ
o/FxygMANByrWA==
               "], {{{}, 
                 {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   PolygonBox[{{1, 53, 54, 25, 24, 23, 22, 21, 20, 19, 18, 17,
                     16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]]}, {}, 
                 {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[0.2], 
                  EdgeForm[None], 
                  GraphicsGroupBox[
                   PolygonBox[{{26, 51, 52, 50, 49, 48, 47, 46, 45, 44, 43, 
                    42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
                    28, 27}}]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
                 {GrayLevel[0.5], AbsoluteThickness[1.5], Opacity[1.], 
                  LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                   16, 17, 18, 19, 20, 21, 22, 23, 24, 25}]}, 
                 {GrayLevel[0.65], AbsoluteThickness[1.5], Opacity[1.], 
                  LineBox[{26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}]}}}],
              AspectRatio->1,
              Axes->{False, False},
              AxesLabel->{None, None},
              AxesOrigin->{0, 0.},
              Background->GrayLevel[0.93],
              BaseStyle->{FontFamily -> "Arial"},
              DisplayFunction->Identity,
              Frame->{{True, True}, {True, True}},
              FrameLabel->{{None, None}, {None, None}},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]],
              FrameTicks->{{None, None}, {None, None}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->{Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]},
              LabelStyle->{FontFamily -> "Arial"},
              Method->{"ScalingFunctions" -> None, "AxesInFront" -> True},
              PlotRange->{All, All},
              PlotRangeClipping->True,
              PlotRangePadding->{{0, 0}, {0, 0.1}},
              Ticks->{Automatic, Automatic}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Type: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["TTest",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"p-Value: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0.11507711358252193`",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"N/A\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test statistic: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1.7677669529663689`",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Data: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Univariate\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Conclusion: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[Cell["\<\
The null hypothesis that the mean difference is 0 is not rejected at the 5 \
percent level based on the T test.\
\>",
                    CellSize->{300, Automatic}],
                   TextCell[
                   "The null hypothesis that the mean difference is 0 is not \
rejected at the 5 percent level based on the T test.", 
                    CellSize -> {300, Automatic}]],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      HypothesisTestData[
      TTest, {{{13., 10., 10., 11., 4.}, {12., 5., 4., 5., 2.}}, 
        "SampleToSample", 1, 
        Rational[1, 20], {0, "Unequal", Automatic, Automatic}, 
        Automatic, {}}, {
       "Normality" -> 1, "EqualVariance" -> 1, "Symmetry" -> 0}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"PValue\"\>", "0.11507711358252193`"},
    {"\<\"PValueTable\"\>", 
     StyleBox[
      TagBox[GridBox[{
         {"\<\"\"\>", "\<\"P\[Hyphen]Value\"\>"},
         {"\<\"T\"\>", "0.11507711358252193`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]},
    {"\<\"ShortTestConclusion\"\>", "\<\"Do not reject\"\>"},
    {"\<\"T\"\>", "0.11507711358252193`"},
    {"\<\"TestConclusion\"\>", 
     TemplateBox[{
      "\"The null hypothesis that \"",
       TemplateBox[{
        "\"the \"", "\"mean\"", "\" difference is \"", "0", "\" \""}, 
        "RowDefault"],"\"is not rejected at the \"",
       TemplateBox[{"5", "\" percent level \""}, "RowDefault"],
       TemplateBox[{"\"based on the \"", "\"T\"", "\" test.\""}, 
        "RowDefault"]},
      "RowDefault"]},
    {"\<\"TestData\"\>", 
     RowBox[{"{", 
      RowBox[{"1.7677669529663689`", ",", "0.11507711358252193`"}], "}"}]},
    {"\<\"TestDataTable\"\>", 
     StyleBox[
      TagBox[GridBox[{
         {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
         {"\<\"T\"\>", "1.7677669529663689`", "0.11507711358252193`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]},
    {"\<\"TestEntries\"\>", 
     RowBox[{"{", 
      RowBox[{"1.7677669529663689`", ",", "0.11507711358252193`"}], "}"}]},
    {"\<\"TestStatistic\"\>", "1.7677669529663689`"},
    {"\<\"TestStatisticTable\"\>", 
     StyleBox[
      TagBox[GridBox[{
         {"\<\"\"\>", "\<\"Statistic\"\>"},
         {"\<\"T\"\>", "1.7677669529663689`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6646140413790693`*^9, 3.66461408332907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Create the outline of a function that will output the properties of an object \
in a Grid, use Block to store the properties list\
\>", "ItemNumbered",
 CellChangeTimes->{{3.664616319278576*^9, 3.664616375027207*^9}}],

Cell["\<\
Use an appropriate expression generating function (Map, Table, etc) to output \
a list of lists from your function\
\>", "ItemNumbered",
 CellChangeTimes->{{3.664616319278576*^9, 3.664616425889348*^9}}],

Cell["\<\
Use Grid in your function to display the properties attractively\
\>", "ItemNumbered",
 CellChangeTimes->{{3.664616319278576*^9, 3.6646164574015512`*^9}}],

Cell[TextData[{
 "Ensure that the property ",
 StyleBox["Properties",
  FontSlant->"Italic"],
 " is not included in your grid."
}], "ItemNumbered",
 CellChangeTimes->{{3.664616319278576*^9, 3.66461648848752*^9}}],

Cell["\<\
Consider how you might restrict the function to work only for those objects \
with properties - note that this could be implemented in many different ways.\
\
\>", "ItemNumbered",
 CellChangeTimes->{{3.664616319278576*^9, 3.664616657423525*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DelayedRules", "Section",
 CellChangeTimes->{{3.6646167052594767`*^9, 3.6646167070825377`*^9}}],

Cell["\<\
Previously when introducing replacement rules, elements were simply replaced \
based on their value:\
\>", "Text",
 CellChangeTimes->{{3.664616709027685*^9, 3.664616741766337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "/.", 
  RowBox[{
   RowBox[{"a_", "/;", 
    RowBox[{"EvenQ", "[", "a", "]"}]}], "\[Rule]", 
   "\"\<even\>\""}]}]], "Input",
 CellChangeTimes->{{3.664616743529326*^9, 3.664616771410714*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"even\"\>", ",", "\<\"even\"\>", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.664616771805888*^9}]
}, Open  ]],

Cell[TextData[{
 "RuleDelayed (:>) allows for the ",
 StyleBox["value ",
  FontSlant->"Italic"],
 "of the matched expression to be manipulated through dynamic scoping:"
}], "Text",
 CellChangeTimes->{{3.664616778981453*^9, 3.6646168298888683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], "/.", 
  RowBox[{
   RowBox[{"a_", "/;", 
    RowBox[{"EvenQ", "[", "a", "]"}]}], "\[RuleDelayed]", 
   RowBox[{
    RowBox[{"ToString", "[", "a", "]"}], "<>", 
    "\"\< is even\>\""}]}]}]], "Input",
 CellChangeTimes->{{3.664616743529326*^9, 3.664616771410714*^9}, {
  3.664616832090206*^9, 3.664616867070425*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"2 is even\"\>", ",", "\<\"4 is even\"\>", ",", "5"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.664616846890078*^9, 3.6646168677667007`*^9}}]
}, Open  ]],

Cell["\<\
Such rules can be used wherever pattern matching is used; Cases, ReplaceAll \
and more.\
\>", "Text",
 CellChangeTimes->{{3.664616870163644*^9, 3.664616886679452*^9}, {
  3.665069789464684*^9, 3.665069803374124*^9}}],

Cell["\<\
A typical example of where DelayedRules are useful is data \
wrangling/correction tasks, consider the following dataset:\
\>", "Text",
 CellChangeTimes->{{3.665069921563592*^9, 3.6650699910888643`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"desktopItems$Import", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://docs.google.com/spreadsheets/d/1dYg-w-\
k0upVEKhBzXCbikDN33o3pMtjPhy7Zb9E7kDg/pub?gid=651658206&single=true&output=\
xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<XLSX\>\"", ",", "\"\<Data\>\"", ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desktopItems$Headers", "=", 
   RowBox[{"First", "[", "desktopItems$Import", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"desktopItems$Data", "=", 
   RowBox[{"Rest", "[", "desktopItems$Import", "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell["Use AssociationThread to create a list of Associations", "ItemNumbered",
 CellChangeTimes->{{3.665070008014127*^9, 3.665070020527484*^9}, {
  3.6650700850836573`*^9, 3.6650700954659977`*^9}}],

Cell["\<\
Extract all values for the key \[OpenCurlyDoubleQuote]How many items are \
there on your desktop?\[CloseCurlyDoubleQuote] - do you see a mistake in the \
data?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.66507016476086*^9, 3.6650702053216352`*^9}}],

Cell["\<\
Refer to the documentation for StringCases and/or RegularExpression to \
extract the non-digit characters from this string:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6650703184082003`*^9, 3.665070345520555*^9}, {
  3.6650705283361607`*^9, 3.665070573410675*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "targetString", "=", "\"\<34343Manipulate[x,{x,{a,b,c,d}}]34334\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.665070575990032*^9, 3.665070616703197*^9}, {
  3.665071028201887*^9, 3.665071029027256*^9}}],

Cell[CellGroupData[{

Cell["\<\
The resultant expression will be a list of strings - use StringJoin to \
combine the strings into one string\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.66507083097621*^9, 3.665070846587995*^9}, {
  3.665070939650688*^9, 3.665070960701847*^9}}],

Cell["Wrap the function in ToExpression - what does this achive", \
"SubitemNumbered",
 CellChangeTimes->{{3.66507083097621*^9, 3.665070846587995*^9}, {
  3.665070939650688*^9, 3.665070982120689*^9}}]
}, Open  ]],

Cell["\<\
Use ReplaceAll with RuleDelayed to correct the faulty data in the list of \
associations you created in question 1 - taking into account what you learned \
from step 3.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.665071053615045*^9, 3.6650711537096653`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 812},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[697, 27, 146, 2, 64, "Section"],
Cell[846, 31, 183, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1054, 39, 908, 23, 148, "Input"],
Cell[1965, 64, 346, 8, 28, "Output"]
}, Open  ]],
Cell[2326, 75, 174, 4, 30, "Text"],
Cell[2503, 81, 166, 3, 30, "ItemNumbered"],
Cell[2672, 86, 286, 8, 46, "Input"],
Cell[2961, 96, 290, 8, 46, "Input"],
Cell[3254, 106, 250, 6, 49, "ItemNumbered"],
Cell[3507, 114, 314, 5, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3858, 124, 97, 1, 64, "Section"],
Cell[3958, 127, 239, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[4222, 135, 539, 14, 63, "Input"],
Cell[4764, 151, 15622, 356, 355, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20423, 512, 227, 4, 49, "ItemNumbered"],
Cell[20653, 518, 212, 4, 49, "ItemNumbered"],
Cell[20868, 524, 164, 3, 30, "ItemNumbered"],
Cell[21035, 529, 212, 6, 30, "ItemNumbered"],
Cell[21250, 537, 255, 5, 49, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21554, 548, 101, 1, 64, "Section"],
Cell[21658, 551, 190, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[21873, 559, 287, 8, 28, "Input"],
Cell[22163, 569, 160, 4, 28, "Output"]
}, Open  ]],
Cell[22338, 576, 248, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[22611, 586, 410, 11, 28, "Input"],
Cell[23024, 599, 196, 4, 28, "Output"]
}, Open  ]],
Cell[23235, 606, 226, 5, 30, "Text"],
Cell[23464, 613, 212, 4, 49, "Text"],
Cell[23679, 619, 375, 10, 63, "Input"],
Cell[24057, 631, 276, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[24358, 642, 197, 2, 30, "ItemNumbered"],
Cell[24558, 646, 258, 5, 49, "ItemNumbered"],
Cell[24819, 653, 274, 5, 49, "ItemNumbered"]
}, Open  ]],
Cell[25108, 661, 243, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[25376, 671, 257, 5, 24, "SubitemNumbered"],
Cell[25636, 678, 200, 3, 24, "SubitemNumbered"]
}, Open  ]],
Cell[25851, 684, 268, 5, 49, "ItemNumbered"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
